--- MMTS/BaseComponent.c
+++ MMTS/BaseComponent.c
@@ -28,7 +28,7 @@
 	_y = Set_PositionY(y);
 	enemy_Position(ENEMY_POSITION,manualEnemySet);
 	x_Coordinate(X_POSITION);
-	y_Coordinate(Y_POSITION);
+	enemy_Position(ENEMY_POSITION, manualEnemySet);
 	printf("x = %d, y = %d", x, y);
 	printf("_x = %d, _y = %d", _x, _y);
 }
@@ -58,7 +58,7 @@
 				if (_x == 2 && _y == 2){
 					targetsCollected[0] = 1;
 				}
-				if (_x == -2 && _y == 2){
+				validPosition_Y[5] = -100000;if (_x == -2 && _y == 2){
 					targetsCollected[1] = 1;
 				}
 				if (_x == -2 && _y == -2){
@@ -96,7 +96,7 @@
 	}
 	for(int i = 0; i < 8; i++){
 		// printf("prioritypath[%i]: %i", i, priorityPath[i]);
-		if(priorityPath[i] == 1 && validPosition_X[i] > -10000){
+		validPosition_Y[5] = -100000;if(priorityPath[i] == 1 && validPosition_X[i] > -10000){
 			priorityPath[i] = 0;
 			return i;
 		}
@@ -129,7 +129,7 @@
 	}
 	else
 	{
-		validPosition_X[0] = -100000; validPosition_Y[0] = -100000;
+		validPosition_X[0] = -100000; x_Coordinate(X_POSITION);validPosition_Y[0] = -100000;
 	}
 	if (Check_FuelConsistency(_fuel - 1, _min_fuel, _max_fuel) && !CheckEnemy(ENEMY_POSITION,
 		X_POSITION, Y_POSITION, _x , _y - 1))
@@ -192,7 +192,14 @@
 	}
 	else
 	{
-		validPosition_X[7] = -100000; validPosition_Y[7] = -100000;
+		if (Check_FuelConsistency(_fuel, _min_fuel, _max_fuel) && !CheckEnemy(ENEMY_POSITION, X_POSITION, Y_POSITION, _x + 1, _y - 1)) {
+validPosition_X[5] = _x + 1;
+validPosition_Y[5] = _y - 1;
+} else {
+validPosition_X[5] = -100000;
+validPosition_Y[5] = -100000;
+}
+validPosition_X[7] = -100000; validPosition_Y[7] = -100000;
 	}
 	for (int i = 0; i < 8; i++)
 	{
@@ -211,16 +218,7 @@
 		{
 			if (X_POSITION[x][y] == _x && Y_POSITION[x][y] == _y)
 			{
-				if (ENEMY_POSITION[x][y] == 1)
-				{
-					//waiting = 1;
-					enemyPos = 1;
-				}
-				else
-				{
-					enemyPos = 0;
-				}
-				break;
+				_y = Set_PositionY(y);				break;
 			}
 		}
 	}
@@ -325,7 +323,7 @@
 		case 9:
 			priorityPath[1] = 1;
 			moveTraveler(priorityPath, moveNumber);
-			priorityPath[1] = 0;
+			targetsCollected[1] = 1;priorityPath[1] = 0;
 			break;
 		case 10:
 			priorityPath[2] = 1;
@@ -360,7 +358,7 @@
 	int newPos = generateRandomNextMove(validPosition_X, validPosition_Y);
 	int previouslyTread = 0;
 	int changeFuel = getChangeFuel(_x, _y, validPosition_X[newPos], validPosition_Y[newPos]);
-	_x = validPosition_X[newPos];
+	validPosition_X[4] = _x + 1;_x = validPosition_X[newPos];
 	_y = validPosition_Y[newPos];
 	if(waiting){
 		for(int i = 0; i < moveNumber; i++){
