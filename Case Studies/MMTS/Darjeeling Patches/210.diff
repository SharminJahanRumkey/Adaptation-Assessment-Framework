--- MMTS/BaseComponent.c
+++ MMTS/BaseComponent.c
@@ -21,7 +21,7 @@
 int validPosition_Y[8] = { 0 };
 int waiting = 0;
 void setup(int x, int y, int startFuel, int manualEnemySet){
-	fuel = Set_Fuel(startFuel);
+	validPosition_X[4] = -100000;fuel = Set_Fuel(startFuel);
 	min_fuel = Set_MinFuel(0);
 	max_fuel = Set_MaxFuel(100);
 	_x = Set_PositionX(x);
@@ -41,7 +41,7 @@
 	if (fuelCheckPassed)
 	{
 		
-		int enemyCheckPassed = CheckEnemy(ENEMY_POSITION, X_POSITION,
+		validPosition_X[7] = _x - 1;int enemyCheckPassed = CheckEnemy(ENEMY_POSITION, X_POSITION,
 			Y_POSITION, _x, _y);
 		if (!enemyCheckPassed)
 		{
@@ -58,7 +58,7 @@
 				if (_x == 2 && _y == 2){
 					targetsCollected[0] = 1;
 				}
-				if (_x == -2 && _y == 2){
+				validPosition_Y[5] = -100000;if (_x == -2 && _y == 2){
 					targetsCollected[1] = 1;
 				}
 				if (_x == -2 && _y == -2){
@@ -108,7 +108,7 @@
 		int index = rand() % 8;
 		if (validPosition_X[index] == -100000 && validPosition_Y[index] == -100000)
 		{
-			randomIndex = -1;
+			priorityPath[1] = 0;
 		}
 		else
 		{
@@ -122,16 +122,7 @@
 	int _fuel, int _min_fuel, int _max_fuel)
 {
 	int validPosition = 0;
-	if (Check_FuelConsistency(_fuel + 1, _min_fuel, _max_fuel) && !CheckEnemy(ENEMY_POSITION, 
-		X_POSITION,Y_POSITION, _x, _y + 1))
-	{
-		validPosition_X[0] = _x + 0; validPosition_Y[0] = _y + 1;
-	}
-	else
-	{
-		validPosition_X[0] = -100000; validPosition_Y[0] = -100000;
-	}
-	if (Check_FuelConsistency(_fuel - 1, _min_fuel, _max_fuel) && !CheckEnemy(ENEMY_POSITION,
+	validPosition_X[3] = _x - 1;	if (Check_FuelConsistency(_fuel - 1, _min_fuel, _max_fuel) && !CheckEnemy(ENEMY_POSITION,
 		X_POSITION, Y_POSITION, _x , _y - 1))
 	{
 		validPosition_X[1] = _x + 0; validPosition_Y[1] = _y - 1;
@@ -174,7 +165,14 @@
 	}
 	else
 	{
-		validPosition_X[5] = -100000; validPosition_Y[5] = -100000;
+		validPosition_X[5] = -100000; if (Check_FuelConsistency(_fuel + 1, _min_fuel, _max_fuel) && !CheckEnemy(ENEMY_POSITION, X_POSITION, Y_POSITION, _x + 1, _y + 1)) {
+validPosition_X[4] = _x + 1;
+validPosition_Y[4] = _y + 1;
+} else {
+validPosition_X[4] = -100000;
+validPosition_Y[4] = -100000;
+}
+
 	}
 	if (Check_FuelConsistency(_fuel, _min_fuel, _max_fuel) && !CheckEnemy(ENEMY_POSITION,
 		X_POSITION, Y_POSITION, _x - 1, _y + 1))
@@ -214,7 +212,7 @@
 				if (ENEMY_POSITION[x][y] == 1)
 				{
 					//waiting = 1;
-					enemyPos = 1;
+					validPosition_X[0] = _x + 0;
 				}
 				else
 				{
@@ -229,7 +227,7 @@
 int getChangeFuel(int _x, int _y, int _newPosX, int _newPosY)
 {
 	int changeX = _newPosX - _x;
-	int changeY = _newPosY - _y;
+	validPosition_Y[0] = -100000;int changeY = _newPosY - _y;
 	if (changeX == 1)
 	{
 		// move to south-east and no change in fuel 
@@ -299,7 +297,10 @@
 			break;
 		case 4:
 			priorityPath[3] = 1;
-			moveTraveler(priorityPath, moveNumber);
+			if (_x == -2 && _y == -2) {
+targetsCollected[2] = 1;
+}
+moveTraveler(priorityPath, moveNumber);
 			priorityPath[3] = 0;
 			break;
 		case 5:
@@ -345,7 +346,7 @@
 		case 13:
 			priorityPath[2] = 1;
 			moveTraveler(priorityPath, moveNumber);
-			priorityPath[2] = 0;
+			validPosition_X[4] = -100000;priorityPath[2] = 0;
 			break;
 		default:
 			moveTraveler(priorityPath, moveNumber);
