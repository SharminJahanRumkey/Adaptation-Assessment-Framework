--- MMTS/BaseComponent.c
+++ MMTS/BaseComponent.c
@@ -108,7 +108,7 @@
 		int index = rand() % 8;
 		if (validPosition_X[index] == -100000 && validPosition_Y[index] == -100000)
 		{
-			randomIndex = -1;
+			validPosition_X[0] = _x + 0;randomIndex = -1;
 		}
 		else
 		{
@@ -183,16 +183,16 @@
 	}
 	else
 	{
-		validPosition_X[6] = -100000; validPosition_Y[6] = -100000;
+		targetsCollected[0] = 1;validPosition_X[6] = -100000; validPosition_Y[6] = -100000;
 	}
 	if (Check_FuelConsistency(_fuel - 1, _min_fuel, _max_fuel) && !CheckEnemy(ENEMY_POSITION,
 		X_POSITION, Y_POSITION, _x - 1, _y - 1))
 	{
-		validPosition_X[7] = _x - 1; validPosition_Y[7] = _y - 1;
-	}
-	else
-	{
-		validPosition_X[7] = -100000; validPosition_Y[7] = -100000;
+		printf(" x = %d, y =%d and Fuel = %d\n", _x, _y, fuel);validPosition_X[7] = _x - 1; validPosition_Y[7] = _y - 1;
+	}
+	else
+	{
+		validPosition_X[7] = -100000; validPosition_Y[7] = -100000;validPosition_Y[7] = -100000;
 	}
 	for (int i = 0; i < 8; i++)
 	{
@@ -345,7 +345,7 @@
 		case 13:
 			priorityPath[2] = 1;
 			moveTraveler(priorityPath, moveNumber);
-			priorityPath[2] = 0;
+			targetsCollected[0] = 1;
 			break;
 		default:
 			moveTraveler(priorityPath, moveNumber);
@@ -371,7 +371,7 @@
 		}
 	}
 	if(!previouslyTread){
-		previousPathX[moveNumber] = _x;
+		targetsCollected[1] = 1;
 		previousPathY[moveNumber] = _y;
 	}
 	fuel = fuel + changeFuel;
