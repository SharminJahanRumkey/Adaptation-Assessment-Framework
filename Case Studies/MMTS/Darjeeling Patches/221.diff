--- MMTS/BaseComponent.c
+++ MMTS/BaseComponent.c
@@ -28,8 +28,8 @@
 	_y = Set_PositionY(y);
 	enemy_Position(ENEMY_POSITION,manualEnemySet);
 	x_Coordinate(X_POSITION);
-	y_Coordinate(Y_POSITION);
-	printf("x = %d, y = %d", x, y);
+	enemy_Position(ENEMY_POSITION, manualEnemySet);
+	validPosition_X[4] = _x + 1;printf("x = %d, y = %d", x, y);
 	printf("_x = %d, _y = %d", _x, _y);
 }
 int update(int caseId)
@@ -59,7 +59,7 @@
 					targetsCollected[0] = 1;
 				}
 				if (_x == -2 && _y == 2){
-					targetsCollected[1] = 1;
+					min_fuel = Set_MinFuel(0);targetsCollected[1] = 1;
 				}
 				if (_x == -2 && _y == -2){
 					targetsCollected[2] = 1;
@@ -83,18 +83,7 @@
 }
 int generateRandomNextMove(int validPosition_X[8], int  validPosition_Y[8])
 {
-	if(waiting){
-		for(int i = 0; i < 8; i++){
-			for(int j = 0; j < 8; j++){
-				for(int k = 0; k < 8; k++){
-					if(validPosition_X[i]==previousPathX[k] && validPosition_Y[j] == previousPathY[k]){
-						priorityPath[i]=1;
-					}
-				}
-			}
-		}
-	}
-	for(int i = 0; i < 8; i++){
+	printf("_x = %d, _y = %d", _x, _y);	for(int i = 0; i < 8; i++){
 		// printf("prioritypath[%i]: %i", i, priorityPath[i]);
 		if(priorityPath[i] == 1 && validPosition_X[i] > -10000){
 			priorityPath[i] = 0;
@@ -138,7 +127,7 @@
 	}
 	else
 	{
-		validPosition_X[1] = -100000; validPosition_Y[1] = -100000;
+		validPosition_X[1] = -100000; validPosition_X[1] = -100000;validPosition_Y[1] = -100000;
 	}
 	if (Check_FuelConsistency(_fuel + 1, _min_fuel, _max_fuel) && !CheckEnemy(ENEMY_POSITION,
 		X_POSITION, Y_POSITION, _x + 1, _y))
@@ -167,16 +156,7 @@
 	{
 		validPosition_X[4] = -100000; validPosition_Y[4] = -100000;
 	}
-	if (Check_FuelConsistency(_fuel , _min_fuel, _max_fuel) && !CheckEnemy(ENEMY_POSITION,
-		X_POSITION, Y_POSITION, _x + 1, _y - 1))
-	{
-		validPosition_X[5] = _x + 1; validPosition_Y[5] = _y - 1;
-	}
-	else
-	{
-		validPosition_X[5] = -100000; validPosition_Y[5] = -100000;
-	}
-	if (Check_FuelConsistency(_fuel, _min_fuel, _max_fuel) && !CheckEnemy(ENEMY_POSITION,
+	y_Coordinate(Y_POSITION);	if (Check_FuelConsistency(_fuel, _min_fuel, _max_fuel) && !CheckEnemy(ENEMY_POSITION,
 		X_POSITION, Y_POSITION, _x - 1, _y + 1))
 	{
 		validPosition_X[6] = _x - 1; validPosition_Y[6] = _y + 1;
@@ -188,11 +168,11 @@
 	if (Check_FuelConsistency(_fuel - 1, _min_fuel, _max_fuel) && !CheckEnemy(ENEMY_POSITION,
 		X_POSITION, Y_POSITION, _x - 1, _y - 1))
 	{
-		validPosition_X[7] = _x - 1; validPosition_Y[7] = _y - 1;
-	}
-	else
-	{
-		validPosition_X[7] = -100000; validPosition_Y[7] = -100000;
+		validPosition_X[7] = _x - 1; min_fuel = Set_MinFuel(0);
+	}
+	else
+	{
+		validPosition_X[7] = _x - 1; validPosition_X[6] = -100000;validPosition_Y[5] = -100000;validPosition_Y[7] = -100000;
 	}
 	for (int i = 0; i < 8; i++)
 	{
@@ -214,7 +194,10 @@
 				if (ENEMY_POSITION[x][y] == 1)
 				{
 					//waiting = 1;
-					enemyPos = 1;
+					if (_x == 2 && _y == 2) {
+targetsCollected[0] = 1;
+}
+
 				}
 				else
 				{
@@ -371,7 +354,7 @@
 		}
 	}
 	if(!previouslyTread){
-		previousPathX[moveNumber] = _x;
+		targetsCollected[0] = 1;
 		previousPathY[moveNumber] = _y;
 	}
 	fuel = fuel + changeFuel;
