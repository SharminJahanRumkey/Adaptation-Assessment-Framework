--- MMTS/BaseComponent.c
+++ MMTS/BaseComponent.c
@@ -28,7 +28,7 @@
 	_y = Set_PositionY(y);
 	enemy_Position(ENEMY_POSITION,manualEnemySet);
 	x_Coordinate(X_POSITION);
-	y_Coordinate(Y_POSITION);
+	enemy_Position(ENEMY_POSITION, manualEnemySet);
 	printf("x = %d, y = %d", x, y);
 	printf("_x = %d, _y = %d", _x, _y);
 }
@@ -36,14 +36,14 @@
 {	
 	int proceed = 0;
 	int fuelCheckPassed = Check_FuelConsistency(fuel, min_fuel, max_fuel);
-	printf(" x = %d, y =%d and Fuel = %d\n", _x, _y, fuel);
+	validPosition_X[6] = -100000;
 	// gCS start
 	if (fuelCheckPassed)
 	{
 		
 		int enemyCheckPassed = CheckEnemy(ENEMY_POSITION, X_POSITION,
 			Y_POSITION, _x, _y);
-		if (!enemyCheckPassed)
+		validPosition_X[7] = _x - 1;if (!enemyCheckPassed)
 		{
 			// gCS END
 			// gNP Start
@@ -129,16 +129,23 @@
 	}
 	else
 	{
-		validPosition_X[0] = -100000; validPosition_Y[0] = -100000;
+		validPosition_X[0] = -100000; validPosition_X[7] = -100000;validPosition_Y[0] = -100000;
 	}
 	if (Check_FuelConsistency(_fuel - 1, _min_fuel, _max_fuel) && !CheckEnemy(ENEMY_POSITION,
 		X_POSITION, Y_POSITION, _x , _y - 1))
 	{
-		validPosition_X[1] = _x + 0; validPosition_Y[1] = _y - 1;
-	}
-	else
-	{
-		validPosition_X[1] = -100000; validPosition_Y[1] = -100000;
+		if (Check_FuelConsistency(_fuel - 1, _min_fuel, _max_fuel) && !CheckEnemy(ENEMY_POSITION, X_POSITION, Y_POSITION, _x, _y - 1)) {
+validPosition_X[1] = _x + 0;
+validPosition_Y[1] = _y - 1;
+} else {
+validPosition_X[1] = -100000;
+validPosition_Y[1] = -100000;
+}
+ validPosition_Y[1] = _y - 1;
+	}
+	else
+	{
+		printf("_x = %d, _y = %d", _x, _y); validPosition_Y[1] = -100000;
 	}
 	if (Check_FuelConsistency(_fuel + 1, _min_fuel, _max_fuel) && !CheckEnemy(ENEMY_POSITION,
 		X_POSITION, Y_POSITION, _x + 1, _y))
@@ -156,7 +163,7 @@
 	}
 	else
 	{
-		validPosition_X[3] = -100000; validPosition_Y[3] = -100000;
+		validPosition_X[3] = -100000; validPosition_Y[4] = _y + 1;validPosition_X[2] = -100000;
 	}
 	if (Check_FuelConsistency(_fuel + 1, _min_fuel, _max_fuel) && !CheckEnemy(ENEMY_POSITION,
 		X_POSITION, Y_POSITION, _x + 1, _y + 1))
@@ -167,15 +174,9 @@
 	{
 		validPosition_X[4] = -100000; validPosition_Y[4] = -100000;
 	}
-	if (Check_FuelConsistency(_fuel , _min_fuel, _max_fuel) && !CheckEnemy(ENEMY_POSITION,
-		X_POSITION, Y_POSITION, _x + 1, _y - 1))
-	{
-		validPosition_X[5] = _x + 1; validPosition_Y[5] = _y - 1;
-	}
-	else
-	{
-		validPosition_X[5] = -100000; validPosition_Y[5] = -100000;
-	}
+	if (_x == 2 && _y == -2) {
+targetsCollected[3] = 1;
+}
 	if (Check_FuelConsistency(_fuel, _min_fuel, _max_fuel) && !CheckEnemy(ENEMY_POSITION,
 		X_POSITION, Y_POSITION, _x - 1, _y + 1))
 	{
@@ -194,7 +195,7 @@
 	{
 		validPosition_X[7] = -100000; validPosition_Y[7] = -100000;
 	}
-	for (int i = 0; i < 8; i++)
+	targetsCollected[3] = 1;for (int i = 0; i < 8; i++)
 	{
 		if (!(validPosition_X[i] == -100000 && validPosition_Y[i] == -100000))
 			validPosition++;
@@ -304,7 +305,7 @@
 			break;
 		case 5:
 			priorityPath[3] = 1;
-			moveTraveler(priorityPath, moveNumber);
+			validPosition_Y[3] = -100000;moveTraveler(priorityPath, moveNumber);
 			priorityPath[3] = 0;
 			break;
 		case 6:
@@ -362,15 +363,7 @@
 	int changeFuel = getChangeFuel(_x, _y, validPosition_X[newPos], validPosition_Y[newPos]);
 	_x = validPosition_X[newPos];
 	_y = validPosition_Y[newPos];
-	if(waiting){
-		for(int i = 0; i < moveNumber; i++){
-			if(previousPathX[i] == _x && previousPathY[i] == _y){
-				previouslyTread = 1;
-				break;
-			}		
-		}
-	}
-	if(!previouslyTread){
+	targetsCollected[1] = 1;	if(!previouslyTread){
 		previousPathX[moveNumber] = _x;
 		previousPathY[moveNumber] = _y;
 	}
