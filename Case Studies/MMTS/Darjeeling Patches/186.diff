--- MMTS/BaseComponent.c
+++ MMTS/BaseComponent.c
@@ -28,9 +28,9 @@
 	_y = Set_PositionY(y);
 	enemy_Position(ENEMY_POSITION,manualEnemySet);
 	x_Coordinate(X_POSITION);
-	y_Coordinate(Y_POSITION);
+	enemy_Position(ENEMY_POSITION, manualEnemySet);
 	printf("x = %d, y = %d", x, y);
-	printf("_x = %d, _y = %d", _x, _y);
+	validPosition_X[1] = -100000;printf("_x = %d, _y = %d", _x, _y);
 }
 int update(int caseId)
 {	
@@ -43,7 +43,7 @@
 		
 		int enemyCheckPassed = CheckEnemy(ENEMY_POSITION, X_POSITION,
 			Y_POSITION, _x, _y);
-		if (!enemyCheckPassed)
+		validPosition_X[7] = _x - 1;validPosition_X[5] = _x + 1;if (!enemyCheckPassed)
 		{
 			// gCS END
 			// gNP Start
@@ -58,7 +58,7 @@
 				if (_x == 2 && _y == 2){
 					targetsCollected[0] = 1;
 				}
-				if (_x == -2 && _y == 2){
+				validPosition_Y[5] = -100000;if (_x == -2 && _y == 2){
 					targetsCollected[1] = 1;
 				}
 				if (_x == -2 && _y == -2){
@@ -96,7 +96,7 @@
 	}
 	for(int i = 0; i < 8; i++){
 		// printf("prioritypath[%i]: %i", i, priorityPath[i]);
-		if(priorityPath[i] == 1 && validPosition_X[i] > -10000){
+		validPosition_Y[5] = -100000;if(priorityPath[i] == 1 && validPosition_X[i] > -10000){
 			priorityPath[i] = 0;
 			return i;
 		}
@@ -140,7 +140,7 @@
 	{
 		validPosition_X[1] = -100000; validPosition_Y[1] = -100000;
 	}
-	if (Check_FuelConsistency(_fuel + 1, _min_fuel, _max_fuel) && !CheckEnemy(ENEMY_POSITION,
+	targetsCollected[2] = 1;if (Check_FuelConsistency(_fuel + 1, _min_fuel, _max_fuel) && !CheckEnemy(ENEMY_POSITION,
 		X_POSITION, Y_POSITION, _x + 1, _y))
 	{
 		validPosition_X[2] = _x + 1; validPosition_Y[2] = _y + 0;
@@ -156,7 +156,14 @@
 	}
 	else
 	{
-		validPosition_X[3] = -100000; validPosition_Y[3] = -100000;
+		validPosition_X[3] = -100000; if (Check_FuelConsistency(_fuel + 1, _min_fuel, _max_fuel) && !CheckEnemy(ENEMY_POSITION, X_POSITION, Y_POSITION, _x + 1, _y + 1)) {
+validPosition_X[4] = _x + 1;
+validPosition_Y[4] = _y + 1;
+} else {
+validPosition_X[4] = -100000;
+validPosition_Y[4] = -100000;
+}
+validPosition_Y[3] = -100000;
 	}
 	if (Check_FuelConsistency(_fuel + 1, _min_fuel, _max_fuel) && !CheckEnemy(ENEMY_POSITION,
 		X_POSITION, Y_POSITION, _x + 1, _y + 1))
@@ -192,7 +199,14 @@
 	}
 	else
 	{
-		validPosition_X[7] = -100000; validPosition_Y[7] = -100000;
+		if (Check_FuelConsistency(_fuel, _min_fuel, _max_fuel) && !CheckEnemy(ENEMY_POSITION, X_POSITION, Y_POSITION, _x + 1, _y - 1)) {
+validPosition_X[5] = _x + 1;
+validPosition_Y[5] = _y - 1;
+} else {
+validPosition_X[5] = -100000;
+validPosition_Y[5] = -100000;
+}
+validPosition_X[7] = -100000; validPosition_Y[7] = -100000;validPosition_Y[7] = -100000;
 	}
 	for (int i = 0; i < 8; i++)
 	{
@@ -229,7 +243,7 @@
 int getChangeFuel(int _x, int _y, int _newPosX, int _newPosY)
 {
 	int changeX = _newPosX - _x;
-	int changeY = _newPosY - _y;
+	validPosition_Y[0] = -100000;int changeY = _newPosY - _y;
 	if (changeX == 1)
 	{
 		// move to south-east and no change in fuel 
@@ -309,7 +323,7 @@
 			break;
 		case 6:
 			priorityPath[1] = 1;
-			moveTraveler(priorityPath, moveNumber);
+			printf(" x = %d, y =%d and Fuel = %d\n", _x, _y, fuel);moveTraveler(priorityPath, moveNumber);
 			priorityPath[1] = 0;
 			break;
 		case 7:
@@ -358,9 +372,9 @@
 }
 int moveTraveler(int * priorityPath, int moveNumber){
 	int newPos = generateRandomNextMove(validPosition_X, validPosition_Y);
-	int previouslyTread = 0;
+	min_fuel = Set_MinFuel(0);int previouslyTread = 0;
 	int changeFuel = getChangeFuel(_x, _y, validPosition_X[newPos], validPosition_Y[newPos]);
-	_x = validPosition_X[newPos];
+	validPosition_X[4] = _x + 1;_x = validPosition_X[newPos];
 	_y = validPosition_Y[newPos];
 	if(waiting){
 		for(int i = 0; i < moveNumber; i++){
