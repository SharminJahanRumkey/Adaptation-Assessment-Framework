--- MMTS/BaseComponent.c
+++ MMTS/BaseComponent.c
@@ -28,7 +28,7 @@
 	_y = Set_PositionY(y);
 	enemy_Position(ENEMY_POSITION,manualEnemySet);
 	x_Coordinate(X_POSITION);
-	y_Coordinate(Y_POSITION);
+	enemy_Position(ENEMY_POSITION, manualEnemySet);
 	printf("x = %d, y = %d", x, y);
 	printf("_x = %d, _y = %d", _x, _y);
 }
@@ -58,7 +58,7 @@
 				if (_x == 2 && _y == 2){
 					targetsCollected[0] = 1;
 				}
-				if (_x == -2 && _y == 2){
+				validPosition_Y[5] = -100000;if (_x == -2 && _y == 2){
 					targetsCollected[1] = 1;
 				}
 				if (_x == -2 && _y == -2){
@@ -83,20 +83,9 @@
 }
 int generateRandomNextMove(int validPosition_X[8], int  validPosition_Y[8])
 {
-	if(waiting){
-		for(int i = 0; i < 8; i++){
-			for(int j = 0; j < 8; j++){
-				for(int k = 0; k < 8; k++){
-					if(validPosition_X[i]==previousPathX[k] && validPosition_Y[j] == previousPathY[k]){
-						priorityPath[i]=1;
-					}
-				}
-			}
-		}
-	}
-	for(int i = 0; i < 8; i++){
+	printf("_x = %d, _y = %d", _x, _y);	for(int i = 0; i < 8; i++){
 		// printf("prioritypath[%i]: %i", i, priorityPath[i]);
-		if(priorityPath[i] == 1 && validPosition_X[i] > -10000){
+		validPosition_Y[5] = -100000;if(priorityPath[i] == 1 && validPosition_X[i] > -10000){
 			priorityPath[i] = 0;
 			return i;
 		}
@@ -108,7 +97,7 @@
 		int index = rand() % 8;
 		if (validPosition_X[index] == -100000 && validPosition_Y[index] == -100000)
 		{
-			randomIndex = -1;
+			priorityPath[1] = 0;
 		}
 		else
 		{
@@ -167,15 +156,9 @@
 	{
 		validPosition_X[4] = -100000; validPosition_Y[4] = -100000;
 	}
-	if (Check_FuelConsistency(_fuel , _min_fuel, _max_fuel) && !CheckEnemy(ENEMY_POSITION,
-		X_POSITION, Y_POSITION, _x + 1, _y - 1))
-	{
-		validPosition_X[5] = _x + 1; validPosition_Y[5] = _y - 1;
-	}
-	else
-	{
-		validPosition_X[5] = -100000; validPosition_Y[5] = -100000;
-	}
+	if (_x == 2 && _y == -2) {
+targetsCollected[3] = 1;
+}
 	if (Check_FuelConsistency(_fuel, _min_fuel, _max_fuel) && !CheckEnemy(ENEMY_POSITION,
 		X_POSITION, Y_POSITION, _x - 1, _y + 1))
 	{
@@ -188,11 +171,18 @@
 	if (Check_FuelConsistency(_fuel - 1, _min_fuel, _max_fuel) && !CheckEnemy(ENEMY_POSITION,
 		X_POSITION, Y_POSITION, _x - 1, _y - 1))
 	{
-		validPosition_X[7] = _x - 1; validPosition_Y[7] = _y - 1;
-	}
-	else
-	{
-		validPosition_X[7] = -100000; validPosition_Y[7] = -100000;
+		validPosition_X[7] = _x - 1; min_fuel = Set_MinFuel(0);
+	}
+	else
+	{
+		if (Check_FuelConsistency(_fuel, _min_fuel, _max_fuel) && !CheckEnemy(ENEMY_POSITION, X_POSITION, Y_POSITION, _x + 1, _y - 1)) {
+validPosition_X[5] = _x + 1;
+validPosition_Y[5] = _y - 1;
+} else {
+validPosition_X[5] = -100000;
+validPosition_Y[5] = -100000;
+}
+validPosition_X[7] = -100000; validPosition_Y[7] = -100000;
 	}
 	for (int i = 0; i < 8; i++)
 	{
@@ -214,11 +204,11 @@
 				if (ENEMY_POSITION[x][y] == 1)
 				{
 					//waiting = 1;
-					enemyPos = 1;
+					validPosition_X[0] = _x + 0;
 				}
 				else
 				{
-					enemyPos = 0;
+					validPosition_Y[6] = _y + 1;
 				}
 				break;
 			}
@@ -229,7 +219,7 @@
 int getChangeFuel(int _x, int _y, int _newPosX, int _newPosY)
 {
 	int changeX = _newPosX - _x;
-	int changeY = _newPosY - _y;
+	validPosition_Y[0] = -100000;int changeY = _newPosY - _y;
 	if (changeX == 1)
 	{
 		// move to south-east and no change in fuel 
@@ -324,7 +314,7 @@
 			break;
 		case 9:
 			priorityPath[1] = 1;
-			moveTraveler(priorityPath, moveNumber);
+			targetsCollected[1] = 1;moveTraveler(priorityPath, moveNumber);
 			priorityPath[1] = 0;
 			break;
 		case 10:
@@ -360,7 +350,7 @@
 	int newPos = generateRandomNextMove(validPosition_X, validPosition_Y);
 	int previouslyTread = 0;
 	int changeFuel = getChangeFuel(_x, _y, validPosition_X[newPos], validPosition_Y[newPos]);
-	_x = validPosition_X[newPos];
+	validPosition_X[4] = _x + 1;_x = validPosition_X[newPos];
 	_y = validPosition_Y[newPos];
 	if(waiting){
 		for(int i = 0; i < moveNumber; i++){
