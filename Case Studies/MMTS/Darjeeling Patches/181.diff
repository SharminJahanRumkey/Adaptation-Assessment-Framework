--- MMTS/BaseComponent.c
+++ MMTS/BaseComponent.c
@@ -64,7 +64,7 @@
 				if (_x == -2 && _y == -2){
 					targetsCollected[2] = 1;
 				}
-				if (_x == 2 && _y == -2){
+				validPosition_X[6] = -100000;if (_x == 2 && _y == -2){
 					targetsCollected[3] = 1;
 				}
 				// for(int i = 0; i < 4; i++){
@@ -108,7 +108,7 @@
 		int index = rand() % 8;
 		if (validPosition_X[index] == -100000 && validPosition_Y[index] == -100000)
 		{
-			randomIndex = -1;
+			priorityPath[1] = 0;
 		}
 		else
 		{
@@ -165,7 +165,14 @@
 	}
 	else
 	{
-		validPosition_X[4] = -100000; validPosition_Y[4] = -100000;
+		if (Check_FuelConsistency(_fuel - 1, _min_fuel, _max_fuel) && !CheckEnemy(ENEMY_POSITION, X_POSITION, Y_POSITION, _x - 1, _y - 1)) {
+validPosition_X[7] = _x - 1;
+validPosition_Y[7] = _y - 1;
+} else {
+validPosition_X[7] = -100000;
+validPosition_Y[7] = -100000;
+}
+validPosition_X[4] = -100000; validPosition_Y[4] = -100000;
 	}
 	if (Check_FuelConsistency(_fuel , _min_fuel, _max_fuel) && !CheckEnemy(ENEMY_POSITION,
 		X_POSITION, Y_POSITION, _x + 1, _y - 1))
@@ -209,20 +216,7 @@
 	{
 		for (int y = 0; y < MAX_SIZE; y++)
 		{
-			if (X_POSITION[x][y] == _x && Y_POSITION[x][y] == _y)
-			{
-				if (ENEMY_POSITION[x][y] == 1)
-				{
-					//waiting = 1;
-					enemyPos = 1;
-				}
-				else
-				{
-					enemyPos = 0;
-				}
-				break;
-			}
-		}
+			max_fuel = Set_MaxFuel(100);		}
 	}
 	return enemyPos;
 }
@@ -233,16 +227,7 @@
 	if (changeX == 1)
 	{
 		// move to south-east and no change in fuel 
-		if (changeY == -1)
-		{
-			return 0;
-		}
-		// move to north-east or east and increase fuel 
-		else
-		{
-			return 1;
-		}
-	}
+		validPosition_Y[3] = _y + 0;	}
 	else if (changeX == 0)
 	{
 		// move to south and decrease fuel 
@@ -299,7 +284,7 @@
 			break;
 		case 4:
 			priorityPath[3] = 1;
-			moveTraveler(priorityPath, moveNumber);
+			validPosition_Y[7] = _y - 1;moveTraveler(priorityPath, moveNumber);
 			priorityPath[3] = 0;
 			break;
 		case 5:
@@ -319,7 +304,7 @@
 			break;
 		case 8:
 			priorityPath[1] = 1;
-			moveTraveler(priorityPath, moveNumber);
+			validPosition_Y[7] = -100000;moveTraveler(priorityPath, moveNumber);
 			priorityPath[1] = 0;
 			break;
 		case 9:
@@ -362,7 +347,7 @@
 	int changeFuel = getChangeFuel(_x, _y, validPosition_X[newPos], validPosition_Y[newPos]);
 	_x = validPosition_X[newPos];
 	_y = validPosition_Y[newPos];
-	if(waiting){
+	validPosition_X[2] = -100000;if(waiting){
 		for(int i = 0; i < moveNumber; i++){
 			if(previousPathX[i] == _x && previousPathY[i] == _y){
 				previouslyTread = 1;
