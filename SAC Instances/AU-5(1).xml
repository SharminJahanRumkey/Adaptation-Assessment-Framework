<?xml version="1.0" encoding="UTF-8" standalone="no"?><GSN><Context identifier="AU-5(a)[1]" statement="Context: AU-5(a)[1]: Assignment: auditFailurePersonnel = &quot;CSO&quot;" tailoring="auditFailurePersonnel = &quot;CSO&quot;"/><Context identifier="AU-5(b)[1]" statement="Context: AU-5(b)[1]: Assignment: auditFailureAction = &quot;stop generating audit records&quot;" tailoring="auditFailureAction = &quot;stop generating audit records&quot;"/><Context identifier="AU-5(1)[1][a]" statement="Context: AU-5(1)[1][a]: Assignment:  auditCapPersonnel = &quot;CSO&quot;" tailoring=" auditCapPersonnel = &quot;CSO&quot;"/><Context identifier="AU-5(1)[1][c]" statement="Context: AU-5(1)[1][c]: Assignment: auditCapLocations = &quot;HQ&quot;" tailoring="auditCapLocations = &quot;HQ&quot;"/><Context identifier="AU-5(1)[2]" statement="Context: AU-5(1)[2]: Assignment: capWarnTimePeriod = 10 seconds" tailoring="capWarnTimePeriod = 10 seconds"/><Context identifier="AU-5(1)[3]" statement="Context: AU-5(1)[3]: Assignment:   capRatioLimit = 75% " tailoring="  capRatioLimit = 75% "/><Context identifier="AU-4[1]" statement="Context: AU-4[1]: Assignment: capacity = 100 GB " tailoring="capacity = 100 GB "/><Context identifier="AU-5(1)[1][b]" statement="Context: AU-5(1)[1][b]: Assignment: auditCapRoles = &quot;C-Suite&quot;" tailoring="auditCapRoles = &quot;C-Suite&quot;"/><Solution assessment="Test result on  auditTrail's capacity" identifier="MSn1" statement="Solution: MSn1: Test result on  auditTrail's capacity"/><Solution assessment="capAlert log" identifier="MSn7" statement="Solution: MSn7: capAlert log"/><Solution assessment="Test result on capRatioLimit" identifier="MSn6" statement="Solution: MSn6: Test result on capRatioLimit"/><Solution assessment="Log of audit  trail" identifier="MSn2" statement="Solution: MSn2: Log of audit  trail"/><Solution assessment="Test result on insertionPoint" identifier="MSn4" statement="Solution: MSn4: Test result on insertionPoint"/><MainGoal achievement_weight="1" baseline_allocation="high" control_action="alerts to authority in the event of an audit processing failure" family="AU" identifier="AU-5 Main" implemented_by="information system" number="5" provision_set="sat(capAlert),val(auditFailureAction),val(auditFailurePersonnel)" statement="Goal: AU-5 AU-5 Main Main: information system alerts to authority in the event of an audit processing failure; Impact = high, Provides= [ sat(capAlert),val(auditFailureAction),val(auditFailurePersonnel)]; aw = 1"/><MainGoal achievement_weight="1" baseline_allocation="high" control_action="provides a warning on allocated audit record storage volume" family="AU" identifier="AU-5(1) Main" implemented_by="information system" number="5" provision_set="val(capAlert),val(capRatioLimit),val(capWarnTimePeriod),val(auditCapPersonnel),val(auditCapRoles),val(auditCapLocation)" statement="Goal: AU-5 AU-5(1) Main Main: information system provides a warning on allocated audit record storage volume; Impact = high, Provides= [ val(capAlert),val(capRatioLimit),val(capWarnTimePeriod),val(auditCapPersonnel),val(auditCapRoles),val(auditCapLocation)]; aw = 1"/><MainGoal achievement_weight="1" baseline_allocation="high" control_action="allocates audit record storage capacity in accordance with requirement" family="AU" identifier="AU-4 Main" implemented_by="organization" number="4" provision_set="val(capacity)" statement="Goal: AU-4 AU-4 Main Main: organization allocates audit record storage capacity in accordance with requirement; Impact = high, Provides= [ val(capacity)]; aw = 1"/><MainGoal achievement_weight="1" baseline_allocation="high" control_action="identify the types of events that the system is capable of logging in support of the audit function" family="AU" identifier="AU-2 Main" implemented_by="organization" number="2" provision_set="sat(auditEvent),val(record)" statement="Goal: AU-2 AU-2 Main Main: organization identify the types of events that the system is capable of logging in support of the audit function; Impact = high, Provides= [ sat(auditEvent),val(record)]; aw = 1"/><MainGoal achievement_weight="1" baseline_allocation="high" control_action="retain audit records for to provide support for after-the-fact investigations of incidents and to meet regulatory and organizational information retention requirements" family="AU" identifier="AU-11 Main" implemented_by="organization" number="11" provision_set="sat(auditRecordRetention),val(retentionPeriod)" statement="Goal: AU-11 AU-11 Main Main: organization retain audit records for to provide support for after-the-fact investigations of incidents and to meet regulatory and organizational information retention requirements; Impact = high, Provides= [ sat(auditRecordRetention),val(retentionPeriod)]; aw = 1"/><MainGoal achievement_weight="1" baseline_allocation="high" control_action="Manage and retain information within the system and information output from the system in accordance with applicable laws, executive orders, directives, regulations, policies, standards, guidelines and operational requirements" family="SI" identifier="SI-12 Main" implemented_by="organization" number="12" provision_set="sat(complianceInfo)" statement="Goal: SI-12 SI-12 Main Main: organization Manage and retain information within the system and information output from the system in accordance with applicable laws, executive orders, directives, regulations, policies, standards, guidelines and operational requirements; Impact = high, Provides= [ sat(complianceInfo)]; aw = 1"/><ReqGoal achievement_weight="1" assessment_process="auditFailureAlertMechanism" functional_requirement="alert in the event of audit processing failure" identifier="AU-5 Req" statement="Goal: AU-5 Req: auditFailureAlertMechanism maintains alert in the event of audit processing failure; aw = 1"/><ReqGoal achievement_weight="1" assessment_process="auditFailureHandleMechanism" functional_requirement="inv (#auditTrail &lt; capRatioLimit × capacity ∨ capAlert)" identifier="AU-5(1) Req" statement="Goal: AU-5(1) Req: auditFailureHandleMechanism maintains inv (#auditTrail &lt; capRatioLimit × capacity ∨ capAlert); aw = 1"/><ReqGoal achievement_weight="1" assessment_process="allocateCapacityMechanism" functional_requirement="allocating space for auditTrail equal to capacity" identifier="AU-4 Req" statement="Goal: AU-4 Req: allocateCapacityMechanism maintains allocating space for auditTrail equal to capacity; aw = 1"/><ModuleGoal achievement_weight="1" assessment_process="checkCongestion" identifier="M1" statement="Module: M1 : Argument over operational subgoal(s) of checkCongestion; aw = 1"/><ModuleGoal achievement_weight="1" assessment_process="findInsertionPoint" identifier="M3" statement="Module: M3 : Argument over operational subgoal(s) of findInsertionPoint; aw = 1"/><ModuleGoal achievement_weight="1" assessment_process="checkTimeTolerance" identifier="M4" statement="Module: M4 : Argument over operational subgoal(s) of checkTimeTolerance; aw = 1"/><ModuleGoal achievement_weight="1" assessment_process="checkCapacity" identifier="M5" statement="Module: M5 : Argument over operational subgoal(s) of checkCapacity; aw = 1"/><ModuleGoal achievement_weight="1" assessment_process="storeAuditRecord" identifier="M6" statement="Module: M6 : Argument over operational subgoal(s) of storeAuditRecord; aw = 1"/><OpGoal achievement_weight="1" condition="contains the  audit record to be inserted" identifier="G-1" statement="Goal: G-1: Variables = record; Condition = contains the  audit record to be inserted; aw = 1" variable="record"/><OpGoal achievement_weight="1" condition="maintains the storage capacity percentage" identifier="G-2" statement="Goal: G-2: Variables = capRatioLimit; Condition = maintains the storage capacity percentage; aw = 1" variable="capRatioLimit"/><OpGoal achievement_weight="1" condition=" true when auditTrail exceeds capRatioLimit" identifier="G-4" statement="Goal: G-4: Variables = capAlert; Condition =  true when auditTrail exceeds capRatioLimit; aw = 1" variable="capAlert"/><OpGoal achievement_weight="1" condition="maintains the index to insert  next record within existing auditTrail" identifier="G-5" statement="Goal: G-5: Variables = insertionPoint; Condition = maintains the index to insert  next record within existing auditTrail; aw = 1" variable="insertionPoint"/><OpGoal achievement_weight="1" condition="performs audit record storage" identifier="G-6" statement="Goal: G-6: Variables = auditTrail; Condition = performs audit record storage; aw = 1" variable="auditTrail"/><Strategy assessment_Process="auditFailureHandleMechanism" identifier="S1" statement="Strategy: S1: Argument over auditFailureHandleMechanism"/><Strategy assessment_Process="allocateCapacityMechanism" identifier="S2" statement="Strategy: S2: Argument over allocateCapacityMechanism"/><Strategy assessment_Process="auditFailureAlertMechanism" identifier="S3" statement="Strategy: S3: Argument over auditFailureAlertMechanism"/><Strategy assessment_Process="checkCapacity" identifier="MS5" statement="Strategy: MS5: Argument over checkCapacity"/><InContextOf destination="AU-5(a)[1]" source="AU-5 Main"/><InContextOf destination="AU-5(b)[1]" source="AU-5 Main"/><InContextOf destination="AU-5(1)[1][a]" source="AU-5(1) Main"/><InContextOf destination="AU-5(1)[1][b]" source="AU-5(1) Main"/><InContextOf destination="AU-5(1)[1][c]" source="AU-5(1) Main"/><InContextOf destination="AU-5(1)[2]" source="AU-5(1) Main"/><InContextOf destination="AU-5(1)[3]" source="AU-5(1) Main"/><InContextOf destination="AU-4[1]" source="AU-4 Main"/><SupportedBy destination="S3" source="AU-5 Main"/><SupportedBy destination="S1" source="AU-5(1) Main"/><SupportedBy destination="S2" source="AU-4 Main"/><SupportedBy destination="AU-5 Req" source="S3"/><SupportedBy destination="AU-4 Req" source="S2"/><SupportedBy destination="AU-5(1) Req" source="S1"/><SupportedBy destination="MSn1" source="AU-5 Req"/><SupportedBy destination="MSn7" source="AU-5 Req"/><SupportedBy destination="MSn6" source="AU-5 Req"/><SupportedBy destination="M1" source="AU-5(1) Req"/><SupportedBy destination="M2" source="AU-5(1) Req"/><SupportedBy destination="M3" source="AU-5(1) Req"/><SupportedBy destination="M4" source="AU-5(1) Req"/><SupportedBy destination="M5" source="AU-5(1) Req"/><SupportedBy destination="M6" source="AU-5(1) Req"/><SupportedBy destination="MSn1" source="AU-4 Req"/><SupportedBy destination="MSn7" source="AU-4 Req"/><SupportedBy destination="MS5" source="M5"/><SupportedBy destination="G-1" source="MS5"/><SupportedBy destination="G-2" source="MS5"/><SupportedBy destination="G-3" source="MS5"/><SupportedBy destination="G-4" source="MS5"/><SupportedBy destination="G-5" source="MS5"/><SupportedBy destination="G-6" source="MS5"/><SupportedBy destination="MSn2" source="G-1"/><SupportedBy destination="MSn6" source="G-2"/><SupportedBy destination="MSn1" source="G-3"/><SupportedBy destination="MSn7" source="G-4"/><SupportedBy destination="MSn4" source="G-5"/><SupportedBy destination="MSn2" source="G-6"/><SupportedBy Requires="val(capAlert),val(capRatioLimit)" destination="AU-5 Main" source="AU-5(1) Main"/><SupportedBy Requires="val(capacity)" destination="AU-5(1) Main" source="AU-5 Main"/><SupportedBy Requires="val(capacity)" destination="AU-5 Main" source="AU-4 Main"/><SupportedBy Requires="sat(capAlert)" destination="AU-4 Main" source="AU-5 Main"/><SupportedBy Requires="val(record)" destination="AU-4 Main" source="AU-2 Main"/><SupportedBy Requires="val(retentionPeriod)" destination="AU-4 Main" source="AU-11 Main"/><SupportedBy Requires="val(retentionPeriod),val(auditFailurePersonnel)" destination="SI-12 Main" source="AU-5 Main"/><SupportedBy Requires="sat(complianceInfo)" destination="AU-5 Main" source="SI-12 Main"/></GSN>